<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:pfx="http://www.tibco.com/schemas/TRAINING9/SharedResources/Schemas/XSD/Schema.xsd">
    <xsd:import namespace="http://www.tibco.com/schemas/TRAINING9/SharedResources/Schemas/XSD/Schema.xsd" schemaLocation="/BusinessProcess/Actions/Module Info Client/XSD/GetDunningEligibleCustomers.xsd"/>
    <pd:name>BusinessProcess/Actions/Module Info Client/DUNNINDOO WS.process</pd:name>
    <pd:startName>Start</pd:startName>
    <pd:startType>
        <xsd:element name="root">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element name="parameter" type="xsd:int"/>
                    <xsd:element name="customerId" type="xsd:string" minOccurs="0"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:startType>
    <pd:startX>92</pd:startX>
    <pd:startY>167</pd:startY>
    <pd:returnBindings>
        <pfx:DunningEligibleCustomersList>
            <xsl:for-each select="$Map-Data/pfx:DunningEligibleCustomersList/pfx:Customers">
                <pfx:Customers>
                    <xsl:if test="pfx:customerId">
                        <pfx:customerId>
                            <xsl:value-of select="pfx:customerId"/>
                        </pfx:customerId>
                    </xsl:if>
                    <xsl:if test="pfx:custCode">
                        <pfx:custCode>
                            <xsl:value-of select="pfx:custCode"/>
                        </pfx:custCode>
                    </xsl:if>
                    <xsl:if test="pfx:segment">
                        <pfx:segment>
                            <xsl:value-of select="pfx:segment"/>
                        </pfx:segment>
                    </xsl:if>
                    <xsl:if test="pfx:openAmount">
                        <pfx:openAmount>
                            <xsl:value-of select="pfx:openAmount"/>
                        </pfx:openAmount>
                    </xsl:if>
                    <xsl:if test="pfx:invoiceAmount">
                        <pfx:invoiceAmount>
                            <xsl:value-of select="pfx:invoiceAmount"/>
                        </pfx:invoiceAmount>
                    </xsl:if>
                    <xsl:if test="pfx:dueDate">
                        <pfx:dueDate>
                            <xsl:value-of select="pfx:dueDate"/>
                        </pfx:dueDate>
                    </xsl:if>
                    <xsl:if test="pfx:lbcDate">
                        <pfx:lbcDate>
                            <xsl:value-of select="pfx:lbcDate"/>
                        </pfx:lbcDate>
                    </xsl:if>
                    <xsl:if test="pfx:msisdn">
                        <pfx:msisdn>
                            <xsl:value-of select="pfx:msisdn"/>
                        </pfx:msisdn>
                    </xsl:if>
                    <xsl:if test="pfx:ccEmail">
                        <pfx:ccEmail>
                            <xsl:value-of select="pfx:ccEmail"/>
                        </pfx:ccEmail>
                    </xsl:if>
                    <xsl:if test="pfx:cclName">
                        <pfx:cclName>
                            <xsl:value-of select="pfx:cclName"/>
                        </pfx:cclName>
                    </xsl:if>
                    <xsl:if test="pfx:ccfName">
                        <pfx:ccfName>
                            <xsl:value-of select="pfx:ccfName"/>
                        </pfx:ccfName>
                    </xsl:if>
                    <xsl:if test="pfx:raisonSociale">
                        <pfx:raisonSociale>
                            <xsl:value-of select="pfx:raisonSociale"/>
                        </pfx:raisonSociale>
                    </xsl:if>
                    <xsl:if test="pfx:coId">
                        <pfx:coId>
                            <xsl:value-of select="pfx:coId"/>
                        </pfx:coId>
                    </xsl:if>
                </pfx:Customers>
            </xsl:for-each>
        </pfx:DunningEligibleCustomersList>
    </pd:returnBindings>
    <pd:endName>End</pd:endName>
    <pd:endType ref="pfx:DunningEligibleCustomersList"/>
    <pd:endX>793</pd:endX>
    <pd:endY>168</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables/>
    <pd:targetNamespace>http://xmlns.example.com/1527778861053</pd:targetNamespace>
    <pd:activity name="Null">
        <pd:type>com.tibco.plugin.timer.NullActivity</pd:type>
        <pd:resourceType>ae.activities.null</pd:resourceType>
        <pd:x>229</pd:x>
        <pd:y>167</pd:y>
        <config/>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="GetCustomerFleet">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>472</pd:x>
        <pd:y>167</pd:y>
        <config>
            <processName>/BusinessProcess/Actions/Module Info Client/GetCustomerFleet.process</processName>
        </config>
        <pd:inputBindings>
            <Customer>
                <CUSTOMER_ID>
                    <xsl:value-of select="$Start/root/customerId"/>
                </CUSTOMER_ID>
            </Customer>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="GetDunningEligibleCustomers">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>464</pd:x>
        <pd:y>88</pd:y>
        <config>
            <processName>/BusinessProcess/Actions/Module Info Client/GetDunningEligibleCustomers.process</processName>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="UpdateDataClient">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>464</pd:x>
        <pd:y>255</pd:y>
        <config>
            <processName>/BusinessProcess/Actions/Module Info Client/UpdateDataClient.process</processName>
        </config>
        <pd:inputBindings>
            <root>
                <customerId>
                    <xsl:value-of select="$Start/root/customerId"/>
                </customerId>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Map Data">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>672</pd:x>
        <pd:y>167</pd:y>
        <config>
            <element ref="pfx:DunningEligibleCustomersList"/>
        </config>
        <pd:inputBindings>
            <pfx:DunningEligibleCustomersList>
                <xsl:choose>
                    <xsl:when test="$Start/root/parameter = 1">
                        <xsl:for-each select="$GetDunningEligibleCustomers/pfx:DunningEligibleCustomersList/pfx:Customers">
                            <pfx:Customers>
                                <xsl:if test="pfx:customerId">
                                    <pfx:customerId>
                                        <xsl:value-of select="pfx:customerId"/>
                                    </pfx:customerId>
                                </xsl:if>
                                <xsl:if test="pfx:custCode">
                                    <pfx:custCode>
                                        <xsl:value-of select="pfx:custCode"/>
                                    </pfx:custCode>
                                </xsl:if>
                                <xsl:if test="pfx:segment">
                                    <pfx:segment>
                                        <xsl:value-of select="pfx:segment"/>
                                    </pfx:segment>
                                </xsl:if>
                                <xsl:if test="pfx:openAmount">
                                    <pfx:openAmount>
                                        <xsl:value-of select="pfx:openAmount"/>
                                    </pfx:openAmount>
                                </xsl:if>
                                <xsl:if test="pfx:invoiceAmount">
                                    <pfx:invoiceAmount>
                                        <xsl:value-of select="pfx:invoiceAmount"/>
                                    </pfx:invoiceAmount>
                                </xsl:if>
                                <xsl:if test="pfx:dueDate">
                                    <pfx:dueDate>
                                        <xsl:value-of select="pfx:dueDate"/>
                                    </pfx:dueDate>
                                </xsl:if>
                                <xsl:if test="pfx:lbcDate">
                                    <pfx:lbcDate>
                                        <xsl:value-of select="pfx:lbcDate"/>
                                    </pfx:lbcDate>
                                </xsl:if>
                                <xsl:if test="pfx:msisdn">
                                    <pfx:msisdn>
                                        <xsl:value-of select="pfx:msisdn"/>
                                    </pfx:msisdn>
                                </xsl:if>
                                <xsl:if test="pfx:ccEmail">
                                    <pfx:ccEmail>
                                        <xsl:value-of select="pfx:ccEmail"/>
                                    </pfx:ccEmail>
                                </xsl:if>
                                <xsl:if test="pfx:cclName">
                                    <pfx:cclName>
                                        <xsl:value-of select="pfx:cclName"/>
                                    </pfx:cclName>
                                </xsl:if>
                                <xsl:if test="pfx:ccfName">
                                    <pfx:ccfName>
                                        <xsl:value-of select="pfx:ccfName"/>
                                    </pfx:ccfName>
                                </xsl:if>
                                <xsl:if test="pfx:raisonSociale">
                                    <pfx:raisonSociale>
                                        <xsl:value-of select="pfx:raisonSociale"/>
                                    </pfx:raisonSociale>
                                </xsl:if>
                                <xsl:if test="pfx:coId">
                                    <pfx:coId>
                                        <xsl:value-of select="pfx:coId"/>
                                    </pfx:coId>
                                </xsl:if>
                            </pfx:Customers>
                        </xsl:for-each>
                    </xsl:when>
                    <xsl:when test="$Start/root/parameter = 2">
                        <xsl:for-each select="$GetCustomerFleet/pfx:DunningEligibleCustomersList/pfx:Customers">
                            <pfx:Customers>
                                <xsl:if test="pfx:customerId">
                                    <pfx:customerId>
                                        <xsl:value-of select="pfx:customerId"/>
                                    </pfx:customerId>
                                </xsl:if>
                                <xsl:if test="pfx:custCode">
                                    <pfx:custCode>
                                        <xsl:value-of select="pfx:custCode"/>
                                    </pfx:custCode>
                                </xsl:if>
                                <xsl:if test="pfx:segment">
                                    <pfx:segment>
                                        <xsl:value-of select="pfx:segment"/>
                                    </pfx:segment>
                                </xsl:if>
                                <xsl:if test="pfx:openAmount">
                                    <pfx:openAmount>
                                        <xsl:value-of select="pfx:openAmount"/>
                                    </pfx:openAmount>
                                </xsl:if>
                                <xsl:if test="pfx:invoiceAmount">
                                    <pfx:invoiceAmount>
                                        <xsl:value-of select="pfx:invoiceAmount"/>
                                    </pfx:invoiceAmount>
                                </xsl:if>
                                <xsl:if test="pfx:dueDate">
                                    <pfx:dueDate>
                                        <xsl:value-of select="pfx:dueDate"/>
                                    </pfx:dueDate>
                                </xsl:if>
                                <xsl:if test="pfx:lbcDate">
                                    <pfx:lbcDate>
                                        <xsl:value-of select="pfx:lbcDate"/>
                                    </pfx:lbcDate>
                                </xsl:if>
                                <xsl:if test="pfx:msisdn">
                                    <pfx:msisdn>
                                        <xsl:value-of select="pfx:msisdn"/>
                                    </pfx:msisdn>
                                </xsl:if>
                                <xsl:if test="pfx:ccEmail">
                                    <pfx:ccEmail>
                                        <xsl:value-of select="pfx:ccEmail"/>
                                    </pfx:ccEmail>
                                </xsl:if>
                                <xsl:if test="pfx:cclName">
                                    <pfx:cclName>
                                        <xsl:value-of select="pfx:cclName"/>
                                    </pfx:cclName>
                                </xsl:if>
                                <xsl:if test="pfx:ccfName">
                                    <pfx:ccfName>
                                        <xsl:value-of select="pfx:ccfName"/>
                                    </pfx:ccfName>
                                </xsl:if>
                                <xsl:if test="pfx:raisonSociale">
                                    <pfx:raisonSociale>
                                        <xsl:value-of select="pfx:raisonSociale"/>
                                    </pfx:raisonSociale>
                                </xsl:if>
                                <xsl:if test="pfx:coId">
                                    <pfx:coId>
                                        <xsl:value-of select="pfx:coId"/>
                                    </pfx:coId>
                                </xsl:if>
                            </pfx:Customers>
                        </xsl:for-each>
                    </xsl:when>
                    <xsl:when test="$Start/root/parameter = 3">
                        <pfx:Customers>
                            <xsl:if test="$Start/root/customerId">
                                <pfx:customerId>
                                    <xsl:value-of select="$Start/root/customerId"/>
                                </pfx:customerId>
                            </xsl:if>
                            <xsl:if test="$UpdateDataClient/root/OpenAmount">
                                <pfx:openAmount>
                                    <xsl:value-of select="$UpdateDataClient/root/OpenAmount"/>
                                </pfx:openAmount>
                            </xsl:if>
                        </pfx:Customers>
                    </xsl:when>
                </xsl:choose>
            </pfx:DunningEligibleCustomersList>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>Null</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Null</pd:from>
        <pd:to>GetDunningEligibleCustomers</pd:to>
        <pd:xpathDescription>LIST EXTRACTION</pd:xpathDescription>
        <pd:lineType>Multiple Bends</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>$Start/root/parameter = 1</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Null</pd:from>
        <pd:to>GetCustomerFleet</pd:to>
        <pd:xpathDescription>FLEET</pd:xpathDescription>
        <pd:lineType>Multiple Bends</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>$Start/root/parameter = 2</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Null</pd:from>
        <pd:to>UpdateDataClient</pd:to>
        <pd:xpathDescription>UPDATE</pd:xpathDescription>
        <pd:lineType>Multiple Bends</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>$Start/root/parameter = 3</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>GetDunningEligibleCustomers</pd:from>
        <pd:to>Map Data</pd:to>
        <pd:lineType>Multiple Bends</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>GetCustomerFleet</pd:from>
        <pd:to>Map Data</pd:to>
        <pd:lineType>Multiple Bends</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>UpdateDataClient</pd:from>
        <pd:to>Map Data</pd:to>
        <pd:lineType>Multiple Bends</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Map Data</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>